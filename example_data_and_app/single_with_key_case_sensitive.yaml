case_sensitive: True  # optional, boolean, default False
screen_width: 80  # optional, integer, default 80
# Note that there is only one tab and no header key/value pairs for that tab
# This example will still work with its one unnecessary 'tab' key, with the 'items' key a value of
# the 'tabs' key, **because there are no other values of the tabs key**, i.e. the 2-3 other keys --
# `tab_header_input`, (optional) `tab_header_description` or (optional) `tab_header_long_description`.
#
# The reason for this design choice is that if there is only one tab defined, the program will never show a
# header/tab bar (since with one tab by definition you can't change tabs). However, if any of the  
# key/value pairs are present, instead of just the list of items,
# it looks like the programmer wants multiple tabs, so it looks like having a single tab means s/he
# accidentally forgot the other tabs, so the program won't accept it.
#
# I tried to come up with some plausible items for a single-menu Python shell app. The app I have in mind goes
# through the filesystem file by file displaying the file and giving the user various options as to what to do
# with the file or even the entire folder. This would be an inefficient way of handling files, to be sure!
# It's only an example.
tabs:
  - items:
      - item_choice_displayed: n 
        item_description: Next directory
        item_inputs: 
          - n  # will be changed to str if not already
        item_returns: next_dir  # will be changed to str if not already
      - item_choice_displayed: p
        item_description: Previous directory
        item_inputs: 
          - p
        item_returns: prev_dir
      - item_choice_displayed: u
        item_description: Up a directory
        item_inputs: 
          - u
        item_returns: up_dir
      - item_choice_displayed: e
        item_description: Enter directory (if one is current selection)  # Note there is no way to 'silence' menu
                                                                           # Items as yet. On the wishlist!
        item_inputs: 
          - e
        item_returns: enter_dir
      - item_choice_displayed: o
        item_description: Open file (if one is current selection)
        item_inputs:
          - o
        item_returns: open_file
      - item_choice_displayed: d
        item_description: Delete file (if one is current selection)
        item_inputs:
          - d
        item_returns: del_file
      - item_choice_displayed: D  # uppercased same letter as previous item
        item_description: Delete directory and contents (if one is current selection)
        item_inputs:
          - D
        item_returns: del_dir 
      - item_choice_displayed: QX  # purposely made uppercase
        item_description: Quit
        item_inputs: 
          - Q
          - X
        item_returns: quit
  

data: '{''outer_schema_multiple_or_single_with_key'': Schema({Optional(''case_sensitive''):
  <class ''bool''>, Optional(''screen_width''): <class ''int''>, ''tabs'': And(<class
  ''list''>, <function _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>)}),
  ''outer_schema_single_without_key'': Schema({''case_sensitive'': <class ''bool''>,
  Optional(''screen_width''): <class ''int''>, ''items'': And(<class ''list''>, <function
  _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>)}), ''tab_schema_multiple'':
  Schema({''header_choice_displayed_and_accepted'': And(Or(<class ''int''>, <class
  ''str''>), <function _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>),
  ''header_description'': And(Or(<class ''str''>, None), <function _ValidSchemas.__init__.<locals>.<lambda>at
  0xSOME_MEMORY_ADDRESS>), Optional(''long_description''): And(<class ''str''>, <function
  _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>), ''items'': And(<class
  ''list''>, <function _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>)}),
  ''tab_schema_single'': Schema({''items'': And(<class ''list''>, <function _ValidSchemas.__init__.<locals>.<lambda>at
  0xSOME_MEMORY_ADDRESS>)}), ''item_schema'': Schema({''choice_displayed'': And(Or(<class
  ''int''>, <class ''str''>), <function _ValidSchemas.__init__.<locals>.<lambda>at
  0xSOME_MEMORY_ADDRESS>), ''choice_description'': And(<class ''str''>, <function
  _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>), ''valid_entries'':
  And(<class ''list''>, <function _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>),
  ''returns'': And(Or(<class ''int''>, <class ''str''>), <function _ValidSchemas.__init__.<locals>.<lambda>at
  0xSOME_MEMORY_ADDRESS>)}), ''entry_schema'': Schema(And(Or(<class ''int''>, <class
  ''str''>), <function _ValidSchemas.__init__.<locals>.<lambda>at 0xSOME_MEMORY_ADDRESS>))}'
